// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Layout component Layout component render 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "flex": 1,
      },
    ]
  }
  testID="safeContainer"
>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "flex": 1,
          },
          {
            "padding": 10,
          },
        ]
      }
    />
  </View>
</RCTSafeAreaView>
`;

exports[`Layout component renders correctly with refresh control 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "flex": 1,
      },
    ]
  }
  testID="safeContainer"
>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={true}
      contentContainerStyle={
        [
          {
            "flexGrow": 1,
          },
          {
            "padding": 10,
          },
        ]
      }
      keyboardShouldPersistTaps="always"
      refreshControl={
        <RefreshControlMock
          onRefresh={[MockFunction]}
          refreshing={false}
          tintColor="rgba(158, 172, 219, 1)"
        />
      }
      showsVerticalScrollIndicator={false}
      testID="scrollContainer"
    >
      <RCTRefreshControl />
      <View>
        <View>
          <Text>
            Content
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;

exports[`Layout component renders correctly with scrollable 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "flex": 1,
      },
    ]
  }
  testID="safeContainer"
>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <RCTScrollView
      bounces={true}
      contentContainerStyle={
        [
          {
            "flexGrow": 1,
          },
          {
            "padding": 10,
          },
        ]
      }
      keyboardShouldPersistTaps="always"
      showsVerticalScrollIndicator={false}
      testID="scrollContainer"
    >
      <View>
        <View>
          <Text>
            Content
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;

exports[`Layout component renders correctly without scrollable 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "flex": 1,
      },
    ]
  }
  testID="safeContainer"
>
  <View
    onLayout={[Function]}
    style={
      [
        {
          "backgroundColor": "transparent",
          "flex": 1,
        },
        {
          "paddingBottom": 0,
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "flex": 1,
          },
          {
            "padding": 10,
          },
        ]
      }
    >
      <View>
        <Text>
          Content
        </Text>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
